{
	"type": "Program",
	"body": [{
		"type": "VariableDeclaration",
		"declarations": [{
			"type": "VariableDeclarator",
			"id": {
				"type": "Identifier",
				"name": "file"
			},
			"init": {
				"type": "MemberExpression",
				"computed": true,
				"object": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "process"
					},
					"property": {
						"type": "Identifier",
						"name": "argv"
					}
				},
				"property": {
					"type": "Literal",
					"value": 2,
					"raw": "2"
				}
			}
		}, {
			"type": "VariableDeclarator",
			"id": {
				"type": "Identifier",
				"name": "colors"
			},
			"init": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "require"
				},
				"arguments": [{
					"type": "Literal",
					"value": "colors",
					"raw": "'colors'"
				}]
			}
		}, {
			"type": "VariableDeclarator",
			"id": {
				"type": "Identifier",
				"name": "fs"
			},
			"init": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "require"
				},
				"arguments": [{
					"type": "Literal",
					"value": "fs",
					"raw": "'fs'"
				}]
			}
		}, {
			"type": "VariableDeclarator",
			"id": {
				"type": "Identifier",
				"name": "esprima"
			},
			"init": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "require"
				},
				"arguments": [{
					"type": "Literal",
					"value": "esprima",
					"raw": "'esprima'"
				}]
			}
		}, {
			"type": "VariableDeclarator",
			"id": {
				"type": "Identifier",
				"name": "estraverse"
			},
			"init": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "require"
				},
				"arguments": [{
					"type": "Literal",
					"value": "estraverse",
					"raw": "'estraverse'"
				}]
			}
		}],
		"kind": "var"
	}, {
		"type": "ExpressionStatement",
		"expression": {
			"type": "CallExpression",
			"callee": {
				"type": "MemberExpression",
				"computed": false,
				"object": {
					"type": "Identifier",
					"name": "console"
				},
				"property": {
					"type": "Identifier",
					"name": "log"
				}
			},
			"arguments": [{
				"type": "MemberExpression",
				"computed": false,
				"object": {
					"type": "Identifier",
					"name": "__dirname"
				},
				"property": {
					"type": "Identifier",
					"name": "red"
				}
			}]
		}
	}, {
		"type": "VariableDeclaration",
		"declarations": [{
			"type": "VariableDeclarator",
			"id": {
				"type": "Identifier",
				"name": "requires"
			},
			"init": {
				"type": "ObjectExpression",
				"properties": []
			}
		}],
		"kind": "var"
	}, {
		"type": "FunctionDeclaration",
		"id": {
			"type": "Identifier",
			"name": "getRequires"
		},
		"params": [{
			"type": "Identifier",
			"name": "file"
		}, {
			"type": "Identifier",
			"name": "scope"
		}],
		"defaults": [],
		"body": {
			"type": "BlockStatement",
			"body": [{
				"type": "ExpressionStatement",
				"expression": {
					"type": "CallExpression",
					"callee": {
						"type": "MemberExpression",
						"computed": false,
						"object": {
							"type": "Identifier",
							"name": "console"
						},
						"property": {
							"type": "Identifier",
							"name": "log"
						}
					},
					"arguments": [{
						"type": "MemberExpression",
						"computed": false,
						"object": {
							"type": "BinaryExpression",
							"operator": "+",
							"left": {
								"type": "BinaryExpression",
								"operator": "+",
								"left": {
									"type": "Literal",
									"value": "processing ",
									"raw": "'processing '"
								},
								"right": {
									"type": "Identifier",
									"name": "file"
								}
							},
							"right": {
								"type": "Literal",
								"value": "\n",
								"raw": "'\\n'"
							}
						},
						"property": {
							"type": "Identifier",
							"name": "blue"
						}
					}]
				}
			}, {
				"type": "ExpressionStatement",
				"expression": {
					"type": "AssignmentExpression",
					"operator": "=",
					"left": {
						"type": "Identifier",
						"name": "scope"
					},
					"right": {
						"type": "LogicalExpression",
						"operator": "||",
						"left": {
							"type": "Identifier",
							"name": "scope"
						},
						"right": {
							"type": "Literal",
							"value": "-",
							"raw": "'-'"
						}
					}
				}
			}, {
				"type": "VariableDeclaration",
				"declarations": [{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "input"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"type": "Identifier",
								"name": "fs"
							},
							"property": {
								"type": "Identifier",
								"name": "readFileSync"
							}
						},
						"arguments": [{
							"type": "Identifier",
							"name": "file"
						}]
					}
				}, {
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "vars"
					},
					"init": {
						"type": "ObjectExpression",
						"properties": []
					}
				}, {
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "req"
					},
					"init": {
						"type": "ObjectExpression",
						"properties": []
					}
				}],
				"kind": "var"
			}, {
				"type": "VariableDeclaration",
				"declarations": [{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "ast"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"type": "Identifier",
								"name": "esprima"
							},
							"property": {
								"type": "Identifier",
								"name": "parse"
							}
						},
						"arguments": [{
							"type": "Identifier",
							"name": "input"
						}]
					}
				}],
				"kind": "var"
			}, {
				"type": "ExpressionStatement",
				"expression": {
					"type": "CallExpression",
					"callee": {
						"type": "MemberExpression",
						"computed": false,
						"object": {
							"type": "Identifier",
							"name": "estraverse"
						},
						"property": {
							"type": "Identifier",
							"name": "traverse"
						}
					},
					"arguments": [{
						"type": "Identifier",
						"name": "ast"
					}, {
						"type": "ObjectExpression",
						"properties": [{
							"type": "Property",
							"key": {
								"type": "Identifier",
								"name": "enter"
							},
							"value": {
								"type": "FunctionExpression",
								"id": null,
								"params": [{
									"type": "Identifier",
									"name": "node"
								}],
								"defaults": [],
								"body": {
									"type": "BlockStatement",
									"body": [{
										"type": "IfStatement",
										"test": {
											"type": "LogicalExpression",
											"operator": "&&",
											"left": {
												"type": "BinaryExpression",
												"operator": "==",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "node"
													},
													"property": {
														"type": "Identifier",
														"name": "type"
													}
												},
												"right": {
													"type": "Literal",
													"value": "VariableDeclarator",
													"raw": "'VariableDeclarator'"
												}
											},
											"right": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "node"
												},
												"property": {
													"type": "Identifier",
													"name": "init"
												}
											}
										},
										"consequent": {
											"type": "BlockStatement",
											"body": [{
												"type": "IfStatement",
												"test": {
													"type": "BinaryExpression",
													"operator": "==",
													"left": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "node"
															},
															"property": {
																"type": "Identifier",
																"name": "init"
															}
														},
														"property": {
															"type": "Identifier",
															"name": "type"
														}
													},
													"right": {
														"type": "Literal",
														"value": "Literal",
														"raw": "'Literal'"
													}
												},
												"consequent": {
													"type": "BlockStatement",
													"body": [{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": true,
																"object": {
																	"type": "Identifier",
																	"name": "vars"
																},
																"property": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "Identifier",
																		"name": "String"
																	},
																	"arguments": [{
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "node"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "id"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "name"
																		}
																	}]
																}
															},
															"right": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "node"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "init"
																	}
																},
																"property": {
																	"type": "Identifier",
																	"name": "value"
																}
															}
														}
													}]
												},
												"alternate": null
											}]
										},
										"alternate": null
									}, {
										"type": "IfStatement",
										"test": {
											"type": "LogicalExpression",
											"operator": "&&",
											"left": {
												"type": "BinaryExpression",
												"operator": "==",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "node"
													},
													"property": {
														"type": "Identifier",
														"name": "type"
													}
												},
												"right": {
													"type": "Literal",
													"value": "CallExpression",
													"raw": "'CallExpression'"
												}
											},
											"right": {
												"type": "BinaryExpression",
												"operator": "==",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "node"
														},
														"property": {
															"type": "Identifier",
															"name": "callee"
														}
													},
													"property": {
														"type": "Identifier",
														"name": "name"
													}
												},
												"right": {
													"type": "Literal",
													"value": "require",
													"raw": "'require'"
												}
											}
										},
										"consequent": {
											"type": "BlockStatement",
											"body": [{
												"type": "VariableDeclaration",
												"declarations": [{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "p"
													},
													"init": null
												}],
												"kind": "var"
											}, {
												"type": "IfStatement",
												"test": {
													"type": "BinaryExpression",
													"operator": "==",
													"left": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "MemberExpression",
															"computed": true,
															"object": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "node"
																},
																"property": {
																	"type": "Identifier",
																	"name": "arguments"
																}
															},
															"property": {
																"type": "Literal",
																"value": 0,
																"raw": "0"
															}
														},
														"property": {
															"type": "Identifier",
															"name": "type"
														}
													},
													"right": {
														"type": "Literal",
														"value": "Literal",
														"raw": "'Literal'"
													}
												},
												"consequent": {
													"type": "BlockStatement",
													"body": [{
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "Identifier",
																"name": "p"
															},
															"right": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "MemberExpression",
																	"computed": true,
																	"object": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "node"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "arguments"
																		}
																	},
																	"property": {
																		"type": "Literal",
																		"value": 0,
																		"raw": "0"
																	}
																},
																"property": {
																	"type": "Identifier",
																	"name": "value"
																}
															}
														}
													}]
												},
												"alternate": {
													"type": "IfStatement",
													"test": {
														"type": "BinaryExpression",
														"operator": "==",
														"left": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "MemberExpression",
																"computed": true,
																"object": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "node"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "arguments"
																	}
																},
																"property": {
																	"type": "Literal",
																	"value": 0,
																	"raw": "0"
																}
															},
															"property": {
																"type": "Identifier",
																"name": "type"
															}
														},
														"right": {
															"type": "Literal",
															"value": "Identifier",
															"raw": "'Identifier'"
														}
													},
													"consequent": {
														"type": "BlockStatement",
														"body": [{
															"type": "ExpressionStatement",
															"expression": {
																"type": "AssignmentExpression",
																"operator": "=",
																"left": {
																	"type": "Identifier",
																	"name": "p"
																},
																"right": {
																	"type": "MemberExpression",
																	"computed": true,
																	"object": {
																		"type": "Identifier",
																		"name": "vars"
																	},
																	"property": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": true,
																			"object": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "node"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "arguments"
																				}
																			},
																			"property": {
																				"type": "Literal",
																				"value": 0,
																				"raw": "0"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "name"
																		}
																	}
																}
															}
														}]
													},
													"alternate": null
												}
											}, {
												"type": "ExpressionStatement",
												"expression": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "console"
														},
														"property": {
															"type": "Identifier",
															"name": "log"
														}
													},
													"arguments": [{
														"type": "Identifier",
														"name": "p"
													}]
												}
											}, {
												"type": "IfStatement",
												"test": {
													"type": "LogicalExpression",
													"operator": "&&",
													"left": {
														"type": "Identifier",
														"name": "p"
													},
													"right": {
														"type": "BinaryExpression",
														"operator": "!=",
														"left": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "require"
																},
																"property": {
																	"type": "Identifier",
																	"name": "resolve"
																}
															},
															"arguments": [{
																"type": "Identifier",
																"name": "p"
															}]
														},
														"right": {
															"type": "Identifier",
															"name": "p"
														}
													}
												},
												"consequent": {
													"type": "BlockStatement",
													"body": [{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "console"
																},
																"property": {
																	"type": "Identifier",
																	"name": "log"
																}
															},
															"arguments": [{
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "require"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "resolve"
																		}
																	},
																	"arguments": [{
																		"type": "Identifier",
																		"name": "p"
																	}]
																},
																"property": {
																	"type": "Identifier",
																	"name": "red"
																}
															}]
														}
													}, {
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "console"
																},
																"property": {
																	"type": "Identifier",
																	"name": "log"
																}
															},
															"arguments": [{
																"type": "Identifier",
																"name": "scope"
															}, {
																"type": "Identifier",
																"name": "p"
															}]
														}
													}, {
														"type": "ExpressionStatement",
														"expression": {
															"type": "AssignmentExpression",
															"operator": "=",
															"left": {
																"type": "MemberExpression",
																"computed": true,
																"object": {
																	"type": "Identifier",
																	"name": "req"
																},
																"property": {
																	"type": "Identifier",
																	"name": "p"
																}
															},
															"right": {
																"type": "CallExpression",
																"callee": {
																	"type": "Identifier",
																	"name": "getRequires"
																},
																"arguments": [{
																	"type": "CallExpression",
																	"callee": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "require"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "resolve"
																		}
																	},
																	"arguments": [{
																		"type": "Identifier",
																		"name": "p"
																	}]
																}, {
																	"type": "BinaryExpression",
																	"operator": "+",
																	"left": {
																		"type": "Identifier",
																		"name": "scope"
																	},
																	"right": {
																		"type": "Literal",
																		"value": "-",
																		"raw": "'-'"
																	}
																}]
															}
														}
													}]
												},
												"alternate": null
											}]
										},
										"alternate": null
									}]
								},
								"rest": null,
								"generator": false,
								"expression": false
							},
							"kind": "init"
						}]
					}]
				}
			}, {
				"type": "ReturnStatement",
				"argument": {
					"type": "Identifier",
					"name": "req"
				}
			}]
		},
		"rest": null,
		"generator": false,
		"expression": false
	}, {
		"type": "ExpressionStatement",
		"expression": {
			"type": "AssignmentExpression",
			"operator": "=",
			"left": {
				"type": "Identifier",
				"name": "requires"
			},
			"right": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "getRequires"
				},
				"arguments": [{
					"type": "Identifier",
					"name": "file"
				}]
			}
		}
	}, {
		"type": "ExpressionStatement",
		"expression": {
			"type": "CallExpression",
			"callee": {
				"type": "MemberExpression",
				"computed": false,
				"object": {
					"type": "Identifier",
					"name": "console"
				},
				"property": {
					"type": "Identifier",
					"name": "log"
				}
			},
			"arguments": [{
				"type": "Identifier",
				"name": "requires"
			}]
		}
	}]
}

[{"var":{"name":"file","value":""}},{"var":{"name":"colors","value":""}},{"var":{"name":"fs","value":""}},{"var":{"name":"esprima","value":""}},{"var":{"name":"estraverse","value":""}},{"var":{"name":"requires","value":""}}]