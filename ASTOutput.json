{
	"type": "Program",
	"body": [
		{
			"type": "VariableDeclaration",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "mainFile"
					},
					"init": {
						"type": "MemberExpression",
						"computed": true,
						"object": {
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"type": "Identifier",
								"name": "process"
							},
							"property": {
								"type": "Identifier",
								"name": "argv"
							}
						},
						"property": {
							"type": "Literal",
							"value": 2,
							"raw": "2"
						}
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "colors"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "Identifier",
							"name": "require"
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "colors",
								"raw": "'colors'"
							}
						]
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "fs"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "Identifier",
							"name": "require"
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "fs",
								"raw": "'fs'"
							}
						]
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "path"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "Identifier",
							"name": "require"
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "path",
								"raw": "'path'"
							}
						]
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "esprima"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "Identifier",
							"name": "require"
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "esprima",
								"raw": "'esprima'"
							}
						]
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "estraverse"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "Identifier",
							"name": "require"
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "estraverse",
								"raw": "'estraverse'"
							}
						]
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "resolve"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "Identifier",
							"name": "require"
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "resolve",
								"raw": "'resolve'"
							}
						]
					}
				}
			],
			"kind": "var"
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "Identifier",
					"name": "curdir"
				},
				"right": {
					"type": "CallExpression",
					"callee": {
						"type": "MemberExpression",
						"computed": false,
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"type": "CallExpression",
									"callee": {
										"type": "MemberExpression",
										"computed": false,
										"object": {
											"type": "CallExpression",
											"callee": {
												"type": "Identifier",
												"name": "String"
											},
											"arguments": [
												{
													"type": "BinaryExpression",
													"operator": "+",
													"left": {
														"type": "BinaryExpression",
														"operator": "+",
														"left": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "process"
																},
																"property": {
																	"type": "Identifier",
																	"name": "cwd"
																}
															},
															"arguments": []
														},
														"right": {
															"type": "Literal",
															"value": "/",
															"raw": "'/'"
														}
													},
													"right": {
														"type": "MemberExpression",
														"computed": true,
														"object": {
															"type": "MemberExpression",
															"computed": false,
															"object": {
																"type": "Identifier",
																"name": "process"
															},
															"property": {
																"type": "Identifier",
																"name": "argv"
															}
														},
														"property": {
															"type": "Literal",
															"value": 2,
															"raw": "2"
														}
													}
												}
											]
										},
										"property": {
											"type": "Identifier",
											"name": "split"
										}
									},
									"arguments": [
										{
											"type": "Literal",
											"value": "/",
											"raw": "'/'"
										}
									]
								},
								"property": {
									"type": "Identifier",
									"name": "slice"
								}
							},
							"arguments": [
								{
									"type": "Literal",
									"value": 0,
									"raw": "0"
								},
								{
									"type": "UnaryExpression",
									"operator": "-",
									"argument": {
										"type": "Literal",
										"value": 1,
										"raw": "1"
									},
									"prefix": true
								}
							]
						},
						"property": {
							"type": "Identifier",
							"name": "join"
						}
					},
					"arguments": [
						{
							"type": "Literal",
							"value": "/",
							"raw": "'/'"
						}
					]
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "Identifier",
					"name": "hapi"
				},
				"right": {
					"type": "CallExpression",
					"callee": {
						"type": "Identifier",
						"name": "require"
					},
					"arguments": [
						{
							"type": "Literal",
							"value": "hapi",
							"raw": "'hapi'"
						}
					]
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "console"
					},
					"property": {
						"type": "Identifier",
						"name": "log"
					}
				},
				"arguments": [
					{
						"type": "MemberExpression",
						"computed": false,
						"object": {
							"type": "Identifier",
							"name": "curdir"
						},
						"property": {
							"type": "Identifier",
							"name": "green"
						}
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "lookuptable"
					},
					"init": {
						"type": "ObjectExpression",
						"properties": []
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "requires"
					},
					"init": {
						"type": "ObjectExpression",
						"properties": []
					}
				}
			],
			"kind": "var"
		},
		{
			"type": "FunctionDeclaration",
			"id": {
				"type": "Identifier",
				"name": "getRequires"
			},
			"params": [
				{
					"type": "Identifier",
					"name": "file"
				},
				{
					"type": "Identifier",
					"name": "scope"
				}
			],
			"defaults": [],
			"body": {
				"type": "BlockStatement",
				"body": [
					{
						"type": "IfStatement",
						"test": {
							"type": "UnaryExpression",
							"operator": "!",
							"argument": {
								"type": "Identifier",
								"name": "file"
							},
							"prefix": true
						},
						"consequent": {
							"type": "ReturnStatement",
							"argument": {
								"type": "Literal",
								"value": false,
								"raw": "false"
							}
						},
						"alternate": null
					},
					{
						"type": "ExpressionStatement",
						"expression": {
							"type": "AssignmentExpression",
							"operator": "=",
							"left": {
								"type": "Identifier",
								"name": "curdir"
							},
							"right": {
								"type": "CallExpression",
								"callee": {
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "CallExpression",
										"callee": {
											"type": "MemberExpression",
											"computed": false,
											"object": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "file"
													},
													"property": {
														"type": "Identifier",
														"name": "split"
													}
												},
												"arguments": [
													{
														"type": "Literal",
														"value": "/",
														"raw": "'/'"
													}
												]
											},
											"property": {
												"type": "Identifier",
												"name": "slice"
											}
										},
										"arguments": [
											{
												"type": "Literal",
												"value": 0,
												"raw": "0"
											},
											{
												"type": "UnaryExpression",
												"operator": "-",
												"argument": {
													"type": "Literal",
													"value": 1,
													"raw": "1"
												},
												"prefix": true
											}
										]
									},
									"property": {
										"type": "Identifier",
										"name": "join"
									}
								},
								"arguments": [
									{
										"type": "Literal",
										"value": "/",
										"raw": "'/'"
									}
								]
							}
						}
					},
					{
						"type": "ExpressionStatement",
						"expression": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"type": "Identifier",
									"name": "console"
								},
								"property": {
									"type": "Identifier",
									"name": "log"
								}
							},
							"arguments": [
								{
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "Identifier",
										"name": "curdir"
									},
									"property": {
										"type": "Identifier",
										"name": "green"
									}
								}
							]
						}
					},
					{
						"type": "ExpressionStatement",
						"expression": {
							"type": "AssignmentExpression",
							"operator": "=",
							"left": {
								"type": "Identifier",
								"name": "scope"
							},
							"right": {
								"type": "LogicalExpression",
								"operator": "||",
								"left": {
									"type": "Identifier",
									"name": "scope"
								},
								"right": {
									"type": "Literal",
									"value": " -- ",
									"raw": "' -- '"
								}
							}
						}
					},
					{
						"type": "VariableDeclaration",
						"declarations": [
							{
								"type": "VariableDeclarator",
								"id": {
									"type": "Identifier",
									"name": "input"
								},
								"init": {
									"type": "CallExpression",
									"callee": {
										"type": "MemberExpression",
										"computed": false,
										"object": {
											"type": "Identifier",
											"name": "fs"
										},
										"property": {
											"type": "Identifier",
											"name": "readFileSync"
										}
									},
									"arguments": [
										{
											"type": "Identifier",
											"name": "file"
										}
									]
								}
							},
							{
								"type": "VariableDeclarator",
								"id": {
									"type": "Identifier",
									"name": "vars"
								},
								"init": {
									"type": "ObjectExpression",
									"properties": []
								}
							},
							{
								"type": "VariableDeclarator",
								"id": {
									"type": "Identifier",
									"name": "req"
								},
								"init": {
									"type": "ObjectExpression",
									"properties": []
								}
							}
						],
						"kind": "var"
					},
					{
						"type": "ExpressionStatement",
						"expression": {
							"type": "AssignmentExpression",
							"operator": "=",
							"left": {
								"type": "Identifier",
								"name": "cd"
							},
							"right": {
								"type": "CallExpression",
								"callee": {
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "Identifier",
										"name": "JSON"
									},
									"property": {
										"type": "Identifier",
										"name": "parse"
									}
								},
								"arguments": [
									{
										"type": "CallExpression",
										"callee": {
											"type": "MemberExpression",
											"computed": false,
											"object": {
												"type": "Identifier",
												"name": "JSON"
											},
											"property": {
												"type": "Identifier",
												"name": "stringify"
											}
										},
										"arguments": [
											{
												"type": "Identifier",
												"name": "curdir"
											}
										]
									}
								]
							}
						}
					},
					{
						"type": "FunctionDeclaration",
						"id": {
							"type": "Identifier",
							"name": "_resolve"
						},
						"params": [
							{
								"type": "Identifier",
								"name": "p"
							}
						],
						"defaults": [],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "IfStatement",
									"test": {
										"type": "UnaryExpression",
										"operator": "!",
										"argument": {
											"type": "CallExpression",
											"callee": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "resolve"
												},
												"property": {
													"type": "Identifier",
													"name": "isCore"
												}
											},
											"arguments": [
												{
													"type": "Identifier",
													"name": "p"
												}
											]
										},
										"prefix": true
									},
									"consequent": {
										"type": "BlockStatement",
										"body": [
											{
												"type": "VariableDeclaration",
												"declarations": [
													{
														"type": "VariableDeclarator",
														"id": {
															"type": "Identifier",
															"name": "fullPath"
														},
														"init": {
															"type": "CallExpression",
															"callee": {
																"type": "MemberExpression",
																"computed": false,
																"object": {
																	"type": "Identifier",
																	"name": "resolve"
																},
																"property": {
																	"type": "Identifier",
																	"name": "sync"
																}
															},
															"arguments": [
																{
																	"type": "Identifier",
																	"name": "p"
																},
																{
																	"type": "ObjectExpression",
																	"properties": [
																		{
																			"type": "Property",
																			"key": {
																				"type": "Identifier",
																				"name": "basedir"
																			},
																			"value": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "CallExpression",
																						"callee": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "CallExpression",
																								"callee": {
																									"type": "MemberExpression",
																									"computed": false,
																									"object": {
																										"type": "CallExpression",
																										"callee": {
																											"type": "Identifier",
																											"name": "String"
																										},
																										"arguments": [
																											{
																												"type": "Identifier",
																												"name": "file"
																											}
																										]
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "split"
																									}
																								},
																								"arguments": [
																									{
																										"type": "Literal",
																										"value": "/",
																										"raw": "'/'"
																									}
																								]
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "slice"
																							}
																						},
																						"arguments": [
																							{
																								"type": "Literal",
																								"value": 0,
																								"raw": "0"
																							},
																							{
																								"type": "UnaryExpression",
																								"operator": "-",
																								"argument": {
																									"type": "Literal",
																									"value": 1,
																									"raw": "1"
																								},
																								"prefix": true
																							}
																						]
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "join"
																					}
																				},
																				"arguments": [
																					{
																						"type": "Literal",
																						"value": "/",
																						"raw": "'/'"
																					}
																				]
																			},
																			"kind": "init"
																		}
																	]
																}
															]
														}
													}
												],
												"kind": "var"
											},
											{
												"type": "TryStatement",
												"block": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "IfStatement",
															"test": {
																"type": "UnaryExpression",
																"operator": "!",
																"argument": {
																	"type": "MemberExpression",
																	"computed": true,
																	"object": {
																		"type": "Identifier",
																		"name": "lookuptable"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "fullPath"
																	}
																},
																"prefix": true
															},
															"consequent": {
																"type": "BlockStatement",
																"body": [
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "AssignmentExpression",
																			"operator": "=",
																			"left": {
																				"type": "MemberExpression",
																				"computed": true,
																				"object": {
																					"type": "Identifier",
																					"name": "lookuptable"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "fullPath"
																				}
																			},
																			"right": {
																				"type": "Literal",
																				"value": true,
																				"raw": "true"
																			}
																		}
																	},
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "console"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "log"
																				}
																			},
																			"arguments": [
																				{
																					"type": "BinaryExpression",
																					"operator": "+",
																					"left": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "CallExpression",
																							"callee": {
																								"type": "Identifier",
																								"name": "String"
																							},
																							"arguments": [
																								{
																									"type": "Identifier",
																									"name": "scope"
																								}
																							]
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "black"
																						}
																					},
																					"right": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "CallExpression",
																							"callee": {
																								"type": "Identifier",
																								"name": "String"
																							},
																							"arguments": [
																								{
																									"type": "Identifier",
																									"name": "p"
																								}
																							]
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "blue"
																						}
																					}
																				}
																			]
																		}
																	},
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "AssignmentExpression",
																			"operator": "=",
																			"left": {
																				"type": "MemberExpression",
																				"computed": true,
																				"object": {
																					"type": "Identifier",
																					"name": "req"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "p"
																				}
																			},
																			"right": {
																				"type": "CallExpression",
																				"callee": {
																					"type": "Identifier",
																					"name": "getRequires"
																				},
																				"arguments": [
																					{
																						"type": "Identifier",
																						"name": "fullPath"
																					},
																					{
																						"type": "BinaryExpression",
																						"operator": "+",
																						"left": {
																							"type": "Identifier",
																							"name": "scope"
																						},
																						"right": {
																							"type": "Literal",
																							"value": " -- ",
																							"raw": "' -- '"
																						}
																					}
																				]
																			}
																		}
																	}
																]
															},
															"alternate": null
														}
													]
												},
												"guardedHandlers": [],
												"handlers": [
													{
														"type": "CatchClause",
														"param": {
															"type": "Identifier",
															"name": "e"
														},
														"body": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "ExpressionStatement",
																	"expression": {
																		"type": "CallExpression",
																		"callee": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "console"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "error"
																			}
																		},
																		"arguments": [
																			{
																				"type": "Identifier",
																				"name": "e"
																			}
																		]
																	}
																}
															]
														}
													}
												],
												"finalizer": null
											}
										]
									},
									"alternate": null
								}
							]
						},
						"rest": null,
						"generator": false,
						"expression": false
					},
					{
						"type": "IfStatement",
						"test": {
							"type": "BinaryExpression",
							"operator": "==",
							"left": {
								"type": "CallExpression",
								"callee": {
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "Identifier",
										"name": "path"
									},
									"property": {
										"type": "Identifier",
										"name": "extname"
									}
								},
								"arguments": [
									{
										"type": "Identifier",
										"name": "file"
									}
								]
							},
							"right": {
								"type": "Literal",
								"value": ".json",
								"raw": "'.json'"
							}
						},
						"consequent": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "AssignmentExpression",
										"operator": "=",
										"left": {
											"type": "Identifier",
											"name": "input"
										},
										"right": {
											"type": "CallExpression",
											"callee": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "JSON"
												},
												"property": {
													"type": "Identifier",
													"name": "parse"
												}
											},
											"arguments": [
												{
													"type": "Identifier",
													"name": "input"
												}
											]
										}
									}
								},
								{
									"type": "IfStatement",
									"test": {
										"type": "CallExpression",
										"callee": {
											"type": "MemberExpression",
											"computed": false,
											"object": {
												"type": "Identifier",
												"name": "Array"
											},
											"property": {
												"type": "Identifier",
												"name": "isArray"
											}
										},
										"arguments": [
											{
												"type": "Identifier",
												"name": "input"
											}
										]
									},
									"consequent": {
										"type": "BlockStatement",
										"body": [
											{
												"type": "ExpressionStatement",
												"expression": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"computed": false,
														"object": {
															"type": "Identifier",
															"name": "input"
														},
														"property": {
															"type": "Identifier",
															"name": "forEach"
														}
													},
													"arguments": [
														{
															"type": "FunctionExpression",
															"id": null,
															"params": [
																{
																	"type": "Identifier",
																	"name": "i"
																}
															],
															"defaults": [],
															"body": {
																"type": "BlockStatement",
																"body": [
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "Identifier",
																				"name": "_resolve"
																			},
																			"arguments": [
																				{
																					"type": "Identifier",
																					"name": "i"
																				}
																			]
																		}
																	}
																]
															},
															"rest": null,
															"generator": false,
															"expression": false
														}
													]
												}
											}
										]
									},
									"alternate": null
								}
							]
						},
						"alternate": null
					},
					{
						"type": "VariableDeclaration",
						"declarations": [
							{
								"type": "VariableDeclarator",
								"id": {
									"type": "Identifier",
									"name": "ast"
								},
								"init": {
									"type": "CallExpression",
									"callee": {
										"type": "MemberExpression",
										"computed": false,
										"object": {
											"type": "Identifier",
											"name": "esprima"
										},
										"property": {
											"type": "Identifier",
											"name": "parse"
										}
									},
									"arguments": [
										{
											"type": "Identifier",
											"name": "input"
										}
									]
								}
							}
						],
						"kind": "var"
					},
					{
						"type": "ExpressionStatement",
						"expression": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"type": "Identifier",
									"name": "estraverse"
								},
								"property": {
									"type": "Identifier",
									"name": "traverse"
								}
							},
							"arguments": [
								{
									"type": "Identifier",
									"name": "ast"
								},
								{
									"type": "ObjectExpression",
									"properties": [
										{
											"type": "Property",
											"key": {
												"type": "Identifier",
												"name": "enter"
											},
											"value": {
												"type": "FunctionExpression",
												"id": null,
												"params": [
													{
														"type": "Identifier",
														"name": "node"
													}
												],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "IfStatement",
															"test": {
																"type": "LogicalExpression",
																"operator": "&&",
																"left": {
																	"type": "BinaryExpression",
																	"operator": "==",
																	"left": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "node"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "type"
																		}
																	},
																	"right": {
																		"type": "Literal",
																		"value": "VariableDeclarator",
																		"raw": "'VariableDeclarator'"
																	}
																},
																"right": {
																	"type": "MemberExpression",
																	"computed": false,
																	"object": {
																		"type": "Identifier",
																		"name": "node"
																	},
																	"property": {
																		"type": "Identifier",
																		"name": "init"
																	}
																}
															},
															"consequent": {
																"type": "BlockStatement",
																"body": [
																	{
																		"type": "IfStatement",
																		"test": {
																			"type": "BinaryExpression",
																			"operator": "==",
																			"left": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "Identifier",
																						"name": "node"
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "init"
																					}
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "type"
																				}
																			},
																			"right": {
																				"type": "Literal",
																				"value": "Literal",
																				"raw": "'Literal'"
																			}
																		},
																		"consequent": {
																			"type": "BlockStatement",
																			"body": [
																				{
																					"type": "ExpressionStatement",
																					"expression": {
																						"type": "AssignmentExpression",
																						"operator": "=",
																						"left": {
																							"type": "MemberExpression",
																							"computed": true,
																							"object": {
																								"type": "Identifier",
																								"name": "vars"
																							},
																							"property": {
																								"type": "CallExpression",
																								"callee": {
																									"type": "Identifier",
																									"name": "String"
																								},
																								"arguments": [
																									{
																										"type": "MemberExpression",
																										"computed": false,
																										"object": {
																											"type": "MemberExpression",
																											"computed": false,
																											"object": {
																												"type": "Identifier",
																												"name": "node"
																											},
																											"property": {
																												"type": "Identifier",
																												"name": "id"
																											}
																										},
																										"property": {
																											"type": "Identifier",
																											"name": "name"
																										}
																									}
																								]
																							}
																						},
																						"right": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "MemberExpression",
																								"computed": false,
																								"object": {
																									"type": "Identifier",
																									"name": "node"
																								},
																								"property": {
																									"type": "Identifier",
																									"name": "init"
																								}
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "value"
																							}
																						}
																					}
																				}
																			]
																		},
																		"alternate": null
																	}
																]
															},
															"alternate": null
														},
														{
															"type": "IfStatement",
															"test": {
																"type": "LogicalExpression",
																"operator": "&&",
																"left": {
																	"type": "BinaryExpression",
																	"operator": "==",
																	"left": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "Identifier",
																			"name": "node"
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "type"
																		}
																	},
																	"right": {
																		"type": "Literal",
																		"value": "CallExpression",
																		"raw": "'CallExpression'"
																	}
																},
																"right": {
																	"type": "BinaryExpression",
																	"operator": "==",
																	"left": {
																		"type": "MemberExpression",
																		"computed": false,
																		"object": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "node"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "callee"
																			}
																		},
																		"property": {
																			"type": "Identifier",
																			"name": "name"
																		}
																	},
																	"right": {
																		"type": "Literal",
																		"value": "require",
																		"raw": "'require'"
																	}
																}
															},
															"consequent": {
																"type": "BlockStatement",
																"body": [
																	{
																		"type": "VariableDeclaration",
																		"declarations": [
																			{
																				"type": "VariableDeclarator",
																				"id": {
																					"type": "Identifier",
																					"name": "pkg"
																				},
																				"init": null
																			}
																		],
																		"kind": "var"
																	},
																	{
																		"type": "IfStatement",
																		"test": {
																			"type": "BinaryExpression",
																			"operator": "==",
																			"left": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "MemberExpression",
																					"computed": true,
																					"object": {
																						"type": "MemberExpression",
																						"computed": false,
																						"object": {
																							"type": "Identifier",
																							"name": "node"
																						},
																						"property": {
																							"type": "Identifier",
																							"name": "arguments"
																						}
																					},
																					"property": {
																						"type": "Literal",
																						"value": 0,
																						"raw": "0"
																					}
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "type"
																				}
																			},
																			"right": {
																				"type": "Literal",
																				"value": "Literal",
																				"raw": "'Literal'"
																			}
																		},
																		"consequent": {
																			"type": "BlockStatement",
																			"body": [
																				{
																					"type": "ExpressionStatement",
																					"expression": {
																						"type": "AssignmentExpression",
																						"operator": "=",
																						"left": {
																							"type": "Identifier",
																							"name": "pkg"
																						},
																						"right": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "MemberExpression",
																								"computed": true,
																								"object": {
																									"type": "MemberExpression",
																									"computed": false,
																									"object": {
																										"type": "Identifier",
																										"name": "node"
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "arguments"
																									}
																								},
																								"property": {
																									"type": "Literal",
																									"value": 0,
																									"raw": "0"
																								}
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "value"
																							}
																						}
																					}
																				}
																			]
																		},
																		"alternate": {
																			"type": "IfStatement",
																			"test": {
																				"type": "BinaryExpression",
																				"operator": "==",
																				"left": {
																					"type": "MemberExpression",
																					"computed": false,
																					"object": {
																						"type": "MemberExpression",
																						"computed": true,
																						"object": {
																							"type": "MemberExpression",
																							"computed": false,
																							"object": {
																								"type": "Identifier",
																								"name": "node"
																							},
																							"property": {
																								"type": "Identifier",
																								"name": "arguments"
																							}
																						},
																						"property": {
																							"type": "Literal",
																							"value": 0,
																							"raw": "0"
																						}
																					},
																					"property": {
																						"type": "Identifier",
																						"name": "type"
																					}
																				},
																				"right": {
																					"type": "Literal",
																					"value": "Identifier",
																					"raw": "'Identifier'"
																				}
																			},
																			"consequent": {
																				"type": "BlockStatement",
																				"body": [
																					{
																						"type": "ExpressionStatement",
																						"expression": {
																							"type": "AssignmentExpression",
																							"operator": "=",
																							"left": {
																								"type": "Identifier",
																								"name": "pkg"
																							},
																							"right": {
																								"type": "MemberExpression",
																								"computed": true,
																								"object": {
																									"type": "Identifier",
																									"name": "vars"
																								},
																								"property": {
																									"type": "MemberExpression",
																									"computed": false,
																									"object": {
																										"type": "MemberExpression",
																										"computed": true,
																										"object": {
																											"type": "MemberExpression",
																											"computed": false,
																											"object": {
																												"type": "Identifier",
																												"name": "node"
																											},
																											"property": {
																												"type": "Identifier",
																												"name": "arguments"
																											}
																										},
																										"property": {
																											"type": "Literal",
																											"value": 0,
																											"raw": "0"
																										}
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "name"
																									}
																								}
																							}
																						}
																					}
																				]
																			},
																			"alternate": null
																		}
																	},
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "Identifier",
																				"name": "_resolve"
																			},
																			"arguments": [
																				{
																					"type": "Identifier",
																					"name": "pkg"
																				}
																			]
																		}
																	},
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "MemberExpression",
																				"computed": false,
																				"object": {
																					"type": "Identifier",
																					"name": "console"
																				},
																				"property": {
																					"type": "Identifier",
																					"name": "log"
																				}
																			},
																			"arguments": [
																				{
																					"type": "CallExpression",
																					"callee": {
																						"type": "Identifier",
																						"name": "String"
																					},
																					"arguments": [
																						{
																							"type": "Identifier",
																							"name": "pkg"
																						}
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "IfStatement",
																		"test": {
																			"type": "Identifier",
																			"name": "pkg"
																		},
																		"consequent": {
																			"type": "BlockStatement",
																			"body": [
																				{
																					"type": "TryStatement",
																					"block": {
																						"type": "BlockStatement",
																						"body": [
																							{
																								"type": "IfStatement",
																								"test": {
																									"type": "BinaryExpression",
																									"operator": "!=",
																									"left": {
																										"type": "CallExpression",
																										"callee": {
																											"type": "MemberExpression",
																											"computed": false,
																											"object": {
																												"type": "Identifier",
																												"name": "require"
																											},
																											"property": {
																												"type": "Identifier",
																												"name": "resolve"
																											}
																										},
																										"arguments": [
																											{
																												"type": "Identifier",
																												"name": "pkg"
																											}
																										]
																									},
																									"right": {
																										"type": "Identifier",
																										"name": "pkg"
																									}
																								},
																								"consequent": {
																									"type": "BlockStatement",
																									"body": [
																										{
																											"type": "ExpressionStatement",
																											"expression": {
																												"type": "CallExpression",
																												"callee": {
																													"type": "MemberExpression",
																													"computed": false,
																													"object": {
																														"type": "Identifier",
																														"name": "console"
																													},
																													"property": {
																														"type": "Identifier",
																														"name": "log"
																													}
																												},
																												"arguments": [
																													{
																														"type": "Identifier",
																														"name": "scope"
																													},
																													{
																														"type": "Identifier",
																														"name": "pkg"
																													}
																												]
																											}
																										},
																										{
																											"type": "ExpressionStatement",
																											"expression": {
																												"type": "AssignmentExpression",
																												"operator": "=",
																												"left": {
																													"type": "MemberExpression",
																													"computed": true,
																													"object": {
																														"type": "Identifier",
																														"name": "req"
																													},
																													"property": {
																														"type": "Identifier",
																														"name": "pkg"
																													}
																												},
																												"right": {
																													"type": "CallExpression",
																													"callee": {
																														"type": "Identifier",
																														"name": "getRequires"
																													},
																													"arguments": [
																														{
																															"type": "CallExpression",
																															"callee": {
																																"type": "Identifier",
																																"name": "resolve"
																															},
																															"arguments": [
																																{
																																	"type": "Identifier",
																																	"name": "pkg"
																																}
																															]
																														},
																														{
																															"type": "BinaryExpression",
																															"operator": "+",
																															"left": {
																																"type": "Identifier",
																																"name": "scope"
																															},
																															"right": {
																																"type": "Literal",
																																"value": "-",
																																"raw": "'-'"
																															}
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"alternate": null
																							}
																						]
																					},
																					"guardedHandlers": [],
																					"handlers": [
																						{
																							"type": "CatchClause",
																							"param": {
																								"type": "Identifier",
																								"name": "err"
																							},
																							"body": {
																								"type": "BlockStatement",
																								"body": [
																									{
																										"type": "IfStatement",
																										"test": {
																											"type": "LogicalExpression",
																											"operator": "&&",
																											"left": {
																												"type": "BinaryExpression",
																												"operator": "==",
																												"left": {
																													"type": "MemberExpression",
																													"computed": true,
																													"object": {
																														"type": "Identifier",
																														"name": "pkg"
																													},
																													"property": {
																														"type": "Literal",
																														"value": 0,
																														"raw": "0"
																													}
																												},
																												"right": {
																													"type": "Literal",
																													"value": ".",
																													"raw": "\".\""
																												}
																											},
																											"right": {
																												"type": "BinaryExpression",
																												"operator": "==",
																												"left": {
																													"type": "MemberExpression",
																													"computed": true,
																													"object": {
																														"type": "Identifier",
																														"name": "pkg"
																													},
																													"property": {
																														"type": "Literal",
																														"value": 1,
																														"raw": "1"
																													}
																												},
																												"right": {
																													"type": "Literal",
																													"value": "/",
																													"raw": "\"/\""
																												}
																											}
																										},
																										"consequent": {
																											"type": "BlockStatement",
																											"body": [
																												{
																													"type": "ExpressionStatement",
																													"expression": {
																														"type": "AssignmentExpression",
																														"operator": "+=",
																														"left": {
																															"type": "Identifier",
																															"name": "curdir"
																														},
																														"right": {
																															"type": "CallExpression",
																															"callee": {
																																"type": "MemberExpression",
																																"computed": false,
																																"object": {
																																	"type": "Identifier",
																																	"name": "pkg"
																																},
																																"property": {
																																	"type": "Identifier",
																																	"name": "slice"
																																}
																															},
																															"arguments": [
																																{
																																	"type": "Literal",
																																	"value": 1,
																																	"raw": "1"
																																}
																															]
																														}
																													}
																												},
																												{
																													"type": "ExpressionStatement",
																													"expression": {
																														"type": "CallExpression",
																														"callee": {
																															"type": "MemberExpression",
																															"computed": false,
																															"object": {
																																"type": "Identifier",
																																"name": "console"
																															},
																															"property": {
																																"type": "Identifier",
																																"name": "log"
																															}
																														},
																														"arguments": [
																															{
																																"type": "Identifier",
																																"name": "scope"
																															},
																															{
																																"type": "Literal",
																																"value": "index.js",
																																"raw": "'index.js'"
																															}
																														]
																													}
																												},
																												{
																													"type": "ExpressionStatement",
																													"expression": {
																														"type": "AssignmentExpression",
																														"operator": "=",
																														"left": {
																															"type": "MemberExpression",
																															"computed": true,
																															"object": {
																																"type": "Identifier",
																																"name": "req"
																															},
																															"property": {
																																"type": "Literal",
																																"value": "index.js",
																																"raw": "'index.js'"
																															}
																														},
																														"right": {
																															"type": "CallExpression",
																															"callee": {
																																"type": "Identifier",
																																"name": "getRequires"
																															},
																															"arguments": [
																																{
																																	"type": "CallExpression",
																																	"callee": {
																																		"type": "Identifier",
																																		"name": "resolve"
																																	},
																																	"arguments": [
																																		{
																																			"type": "Literal",
																																			"value": "index.js",
																																			"raw": "'index.js'"
																																		}
																																	]
																																},
																																{
																																	"type": "BinaryExpression",
																																	"operator": "+",
																																	"left": {
																																		"type": "Identifier",
																																		"name": "scope"
																																	},
																																	"right": {
																																		"type": "Literal",
																																		"value": "-",
																																		"raw": "'-'"
																																	}
																																}
																															]
																														}
																													}
																												}
																											]
																										},
																										"alternate": {
																											"type": "BlockStatement",
																											"body": [
																												{
																													"type": "ExpressionStatement",
																													"expression": {
																														"type": "CallExpression",
																														"callee": {
																															"type": "MemberExpression",
																															"computed": false,
																															"object": {
																																"type": "Identifier",
																																"name": "console"
																															},
																															"property": {
																																"type": "Identifier",
																																"name": "log"
																															}
																														},
																														"arguments": [
																															{
																																"type": "MemberExpression",
																																"computed": false,
																																"object": {
																																	"type": "CallExpression",
																																	"callee": {
																																		"type": "Identifier",
																																		"name": "String"
																																	},
																																	"arguments": [
																																		{
																																			"type": "Identifier",
																																			"name": "pkg"
																																		}
																																	]
																																},
																																"property": {
																																	"type": "Identifier",
																																	"name": "red"
																																}
																															}
																														]
																													}
																												}
																											]
																										}
																									}
																								]
																							}
																						}
																					],
																					"finalizer": null
																				}
																			]
																		},
																		"alternate": null
																	}
																]
															},
															"alternate": null
														}
													]
												},
												"rest": null,
												"generator": false,
												"expression": false
											},
											"kind": "init"
										}
									]
								}
							]
						}
					},
					{
						"type": "ReturnStatement",
						"argument": {
							"type": "Identifier",
							"name": "req"
						}
					}
				]
			},
			"rest": null,
			"generator": false,
			"expression": false
		},
		{
			"type": "FunctionDeclaration",
			"id": {
				"type": "Identifier",
				"name": "pop"
			},
			"params": [
				{
					"type": "Identifier",
					"name": "path"
				},
				{
					"type": "Identifier",
					"name": "l"
				}
			],
			"defaults": [],
			"body": {
				"type": "BlockStatement",
				"body": [
					{
						"type": "ReturnStatement",
						"argument": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"type": "CallExpression",
									"callee": {
										"type": "MemberExpression",
										"computed": false,
										"object": {
											"type": "CallExpression",
											"callee": {
												"type": "MemberExpression",
												"computed": false,
												"object": {
													"type": "Identifier",
													"name": "path"
												},
												"property": {
													"type": "Identifier",
													"name": "split"
												}
											},
											"arguments": [
												{
													"type": "Literal",
													"value": "/",
													"raw": "'/'"
												}
											]
										},
										"property": {
											"type": "Identifier",
											"name": "slice"
										}
									},
									"arguments": [
										{
											"type": "Literal",
											"value": 0,
											"raw": "0"
										},
										{
											"type": "UnaryExpression",
											"operator": "-",
											"argument": {
												"type": "LogicalExpression",
												"operator": "||",
												"left": {
													"type": "Identifier",
													"name": "l"
												},
												"right": {
													"type": "Literal",
													"value": 1,
													"raw": "1"
												}
											},
											"prefix": true
										}
									]
								},
								"property": {
									"type": "Identifier",
									"name": "join"
								}
							},
							"arguments": [
								{
									"type": "Literal",
									"value": "/",
									"raw": "'/'"
								}
							]
						}
					}
				]
			},
			"rest": null,
			"generator": false,
			"expression": false
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "AssignmentExpression",
				"operator": "=",
				"left": {
					"type": "Identifier",
					"name": "requires"
				},
				"right": {
					"type": "CallExpression",
					"callee": {
						"type": "Identifier",
						"name": "getRequires"
					},
					"arguments": [
						{
							"type": "Identifier",
							"name": "mainFile"
						}
					]
				}
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"type": "Identifier",
						"name": "console"
					},
					"property": {
						"type": "Identifier",
						"name": "log"
					}
				},
				"arguments": [
					{
						"type": "Identifier",
						"name": "requires"
					}
				]
			}
		}
	],
	"comments": [
		{
			"type": "Line",
			"value": " Do we actually have a package we are looking at"
		},
		{
			"type": "Line",
			"value": " Try to load it. If node can't find it, we try a different approach"
		},
		{
			"type": "Line",
			"value": " console.log(require.resolve(pkg).red);"
		},
		{
			"type": "Line",
			"value": " Assume it's a folder"
		}
	]
}